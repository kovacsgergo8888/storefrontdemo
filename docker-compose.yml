version: '2.0'

services:
  api_gateway_nginx:
    build:
      context: APIGateway/Docker
      dockerfile: Dockerfile
    container_name: 'api_gateway_nginx'
    volumes:
      - ./APIGateway/Docker/nginx.conf:/etc/nginx/nginx.conf
      - ./APIGateway/Docker/api-gateway.conf:/etc/nginx/conf.d/api-gateway.conf
      - ./APIGateway/Docker/oauth2.js:/etc/nginx/oauth2.js
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - storefront_nginx
      - storefront_php
      - oauth_server_ngnix_php
      - customer_api
      - newsletter_api
    ports:
      - 8090:8080

  oauth_server_ngnix_php:
    build:
      context: OauthServer/Docker
      dockerfile: Dockerfile
    container_name: 'oauth_server_nginx_php'
    volumes:
      - ./OauthServer/App:/var/www/html
      - ./OauthServer/Docker/php.ini:/etc/php81/conf.d/settings.ini
      - ./OauthServer/Docker/nginx.conf:/etc/nginx/conf.d/server.conf
    ports:
      - 8085:8090
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cart_api_ngnix_php:
    build:
      context: Cart/Docker
      dockerfile: Dockerfile
    container_name: 'cart_api_nginx_php'
    volumes:
      - ./Cart/App:/var/www/html
      - ./Cart/Docker/php.ini:/etc/php81/conf.d/settings.ini
      - ./Cart/Docker/nginx.conf:/etc/nginx/conf.d/server.conf
    ports:
      - 8086:8091
    extra_hosts:
      - "host.docker.internal:host-gateway"

# workshop
  checkout_api:
    build:
      context: Checkout/Docker
      dockerfile: Dockerfile
    container_name: 'checkout_api'
    volumes:
      - ./Checkout/App:/var/www/html
      - ./Checkout/Docker/php.ini:/etc/php81/conf.d/settings.ini
      - ./Checkout/Docker/nginx.conf:/etc/nginx/conf.d/server.conf
    ports:
      - 8506:8507
    extra_hosts:
      - "host.docker.internal:host-gateway"

  shipping_api:
    build:
      context: Shipping/Docker
      dockerfile: Dockerfile
    container_name: 'shipping_api'
    volumes:
      - ./Shipping/App:/var/www/html
      - ./Shipping/Docker/php.ini:/etc/php81/conf.d/settings.ini
      - ./Shipping/Docker/nginx.conf:/etc/nginx/conf.d/server.conf
    ports:
      - 8505:8506
    extra_hosts:
      - "host.docker.internal:host-gateway"

  payment_api:
    build:
      context: Payment/Docker
      dockerfile: Dockerfile
    container_name: 'payment_api'
    volumes:
      - ./Payment/App:/var/www/html
      - ./Payment/Docker/php.ini:/etc/php81/conf.d/settings.ini
      - ./Payment/Docker/nginx.conf:/etc/nginx/conf.d/server.conf
    ports:
      - 8503:8504
    extra_hosts:
      - "host.docker.internal:host-gateway"

  order_api:
    build:
      context: Order/Docker
      dockerfile: Dockerfile
    container_name: 'order_api'
    volumes:
      - ./Order/Api/App:/var/www/html
      - ./Order/Docker/php.ini:/etc/php81/conf.d/settings.ini
      - ./Order/Docker/nginx.conf:/etc/nginx/conf.d/server.conf
    ports:
      - 8501:8502
    extra_hosts:
      - "host.docker.internal:host-gateway"

  storefront_php:
    build:
      context: Storefront/Docker/services/php
      dockerfile: Dockerfile
    container_name: 'storefront_php'
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - APP_ENV=${APP_ENV}
    volumes:
      - ${APP_PATH}:${WORKING_DIR}
      - ./Storefront/Docker/services/php/php.ini:/usr/local/etc/php/conf.d/php.override.ini:ro
    working_dir: '${WORKING_DIR}'
    extra_hosts:
      - "host.docker.internal:host-gateway"

  storefront_nginx:
    build:
      context: Storefront/Docker/services/nginx
      dockerfile: Dockerfile
    container_name: 'storefront_nginx'
    volumes:
      - ${APP_PATH}:${WORKING_DIR}
      - ./Storefront/Docker/services/nginx/logs:/var/log/nginx
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./Storefront/Docker/services/nginx/app.conf:/etc/nginx/conf.d/app.conf
      - ./Storefront/Docker/services/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - storefront_php
    ports:
      - 80:80
      - 443:443

  storefront_rabbit-mq:
    image: rabbitmq:3-management
    volumes:
      - ./rabbitmq/:/var/lib/rabbitmq:rw
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/

  catalog_api:
    build:
      context: Catalog/Api
      dockerfile: Docker/Dockerfile
    container_name: 'catalog_api'
    volumes:
      - ./Catalog/Api/App:/src
      - /src/node_modules
    ports:
      - "8083:8083"
    depends_on:
      - db
    command: [ "node", "server.js" ]

  customer_api:
    build:
      context: Customer/Api
      dockerfile: Docker/Dockerfile
    container_name: 'customer_api'
    volumes:
      - ./Customer/Api/App:/src
      - /src/node_modules
    depends_on:
      - db
    ports:
      - "8081:8081"
    command: ["node", "server.js"]

  newsletter_api:
    build:
      context: Newsletter/Api
      dockerfile: Docker/Dockerfile
    container_name: 'newsletter_api'
    volumes:
      - ./Newsletter/Api/App:/src
      - /src/node_modules
    ports:
      - "8082:8082"
    command: ["node", "server.js"]

  admin_shell:
    build:
      context: Admin/Shell
      dockerfile: Docker/Dockerfile
    container_name: 'admin_shell'
    volumes:
      - ./Admin/Shell/App:/src
      - /src/node_modules
    ports:
      - "5000:5000"
    command: ["npm", "run","serve"]


  admin_auth_api:
    build:
      context: Admin/Auth/Api
      dockerfile: Docker/Dockerfile
    container_name: 'admin_auth_api'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./Admin/Auth/Api/App:/src
      - /src/node_modules
    ports:
      - "5007:5007"
    command: [ "node", "server.js" ]

  admin_shared:
    build:
      context: Admin/Shared
      dockerfile: Docker/Dockerfile
    container_name: 'admin_shared'
    volumes:
      - ./Admin/Shared/App:/src
      - /src/node_modules
    ports:
      - "5004:5004"
    command: ["npm", "run","serve"]
    extra_hosts:
      - "host.docker.internal:host-gateway"

  admin_navbar:
    build:
      context: Admin/Navbar
      dockerfile: Docker/Dockerfile
    container_name: 'admin_navbar'
    volumes:
      - ./Admin/Navbar/App:/src
      - /src/node_modules
    ports:
      - "5005:5005"
    command: ["npm", "run","serve"]

  customer_admin:
    build:
      context: Customer/Admin
      dockerfile: Docker/Dockerfile
    container_name: 'customer_admin'
    volumes:
      - ./Customer/Admin/App:/src
      - /src/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - HOST_PORT
      - HOST_URL
    ports:
      - "5001:5001"
    command: ["npm", "run", "serve"]

  newsletter_admin:
    build:
      context: Newsletter/Admin
      dockerfile: Docker/Dockerfile
    container_name: 'newsletter_admin'
    volumes:
      - ./Newsletter/Admin/App:/src
      - /src/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - HOST_PORT
      - HOST_URL
    ports:
      - "5002:5002"
    command: ["npm", "run", "serve"]

  order_admin:
    build:
      context: Order/Admin
      dockerfile: Docker/Dockerfile
    container_name: 'order_admin'
    volumes:
      - ./Order/Admin/App:/src
      - /src/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - HOST_PORT
      - HOST_URL
    ports:
      - "5009:5009"
    command: ["npm", "run", "serve"]

  db:
    image: mysql:8.0.19
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    links:
      - db
    environment:
      - PMA_HOST=db
volumes:
  mysql-data:

